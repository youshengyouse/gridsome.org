{"hash":"2b02a0000ad813df792df14a0a1995cf43a60d26","data":{"contributor":{"id":"codybarr","title":"Cody Barr","bio":"Web Developer","avatar":{"type":"image","mimeType":"image/jpeg","src":"/assets/static/codybarr.334f766.029e659329e73437025b6b6896e30e31.jpg","size":{"width":124,"height":124},"sizes":"(max-width: 124px) 100vw, 124px","srcset":["/assets/static/codybarr.334f766.029e659329e73437025b6b6896e30e31.jpg 124w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 124 124' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-60c9854ab94d3619651a59594723aa38'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-60c9854ab94d3619651a59594723aa38)' width='124' height='124' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCABAAEADASIAAhEBAxEB/8QAGwAAAgIDAQAAAAAAAAAAAAAABQYEBwADCAL/xAAyEAABAwMDAgQFAwQDAAAAAAABAgMEAAUREiExBkETIlFxBxRhgaEVMlIjM2KxkcHw/8QAGAEAAwEBAAAAAAAAAAAAAAAAAgMEAQD/xAAgEQADAAIDAAIDAAAAAAAAAAAAAQIDERIhMQQTIkFR/9oADAMBAAIRAxEAPwDohudIhAB1JcT2PrUxu%2bRiQHQttR/kKWm27ywgBrWpk8A4WKiSUylL/roKFe21Kil/Q6Q/symHv7bqVfet1ItucWhY1t6sdxQ3r/rt7paNHYgMB%2b6SyfBacV5EIHLiu%2bkfk0xPb0C%2buyzKyubpPxZv8dBIvUNx4cpMZAb9tyDT58P/AIssXuT8le0Ro0jA0yGFktLPoc7pP3Io3LQO0WrWVlZQmlRdMfEDx4zTT0qMmSkYUg%2bUH2zTtb7/ABbklKZCG1IVwsbg/eqBduDEpt4z7eht1ax5kb4SOPNzmplrlNwG3PCedjs4CsB4g4zjIH1rn8aXPPE%2bmZOdOuNenQgtsQnKXFBKjhICu/0rnjrKFHvvX16fuk1SLZAX8qllKjrc04JzjfSPzRF6Ve4cVp20T5bygjxkta8YTntnk%2b9Vj1FM6qjJnMralobuRcU75clxROCSeN%2bNvauiHD/IPly87HeHf%2blGg1HtiYz5cOltthAOo%2b%2bw/NarsIVwd1RrW9Cno3aebUjJP8VJyAoH0oDZvh03c%2biTlLbF3W98y03qJLTY2CDvnfc/TIorYUXpJai3WM06WyEiSV%2bYgeu25p%2bP6/KCyzlfiL4%2bGfVDdz6PguTSpElsFlwKB5Scf6xTai5RFcPJqs%2bgnY8O%2bS7JKbUpMtBnoeKtknSlJSB6bZ980%2bfpcXctOE/QKFS3kU0zPraS2c2zGpLrKgGSAeQqtF3gfrMRuPqEINJGHRuskdwe1EFNvpA8Fx4DHCsH7VubbfcdBQh9JH7klkn74qGPk5YjhPgl4065fs9WViV800gTw8wlCUocdOFqPfUR2ovdWnYi/l3nBgJ8ygoK2O%2bc/eh6Yb2nWpkA%2bhSU7/ehMifGWy%2bIr5dKE63G05UkDAzg8E4IOB2NPx58l9UVfH2n2gKl5r9TeDS3XY3i6yFOKJJB7KHHsOKfrPIjXPUqOVbHKgo7g0qxBEfeiusTUFAPmAHNM9umR3rgj5VZddUMaRzj19qoTK61omXr5%2bLMjzLWW1SWUhBClY1I5KaI2/q6U0pabq2WEjdDiAVIVtvnuKjTbXJjXT9QlKbU2tvLSSknY4Bzg%2b9Q7tcGkI%2bakttJitpwvwzx9jvRJTkRFdUq2KUvqBNtaLFuWorPMhzBWT9OyaCnquQUREuuLkJGpeh4lWpWcDI70qyLip9OtSgHE5Qr0JAz%2bRWmM9pdjgnJQgAe/P8A3RTEytJF6anqRk6w6nnXFg26KsMs6cSXEbFeeUJxwnttz3pelXFcVsPRSW3WnPHBT2BGk7emMbegry35y6M88/8ANRJg0u6/3JxggdxW6Bpv0JW%2bVap7xL092zSFnzEAqYWT3yP2/irR6Hi2exIcefvUBSlp1KfMpB1AbgDBzj6VRrTBbkhlJGvGWSrhY/if/c1NjRyT4sZLZUD5kKThSD6fWh4oV2XqvqB55y4PWq4F2G4rU224dlpydgDx68VCmuQL7HXDuSjCUlST4gIJOO2PT2qurVe3IyAiaw4lHHjMEbD6p4/1Rd99LyfGiyFvMHnw0%2bYH/IcitU68GOZtdo//2Q==' /%3e%3c/svg%3e"},"twitter":"@codybarr","posts":{"totalCount":1,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"e374bca76397889702dd1a0d8b348a72","title":"How to integrate Infinite Loading with Gridsome","path":"/blog/2019/10/08/infinite-loading-with-gridsome/","date":"8. October 2019","timeToRead":3,"author":[{"id":"codybarr","title":"Cody Barr","path":"/contributor/codybarr/"}],"excerpt":"Infinite loading is an alternative strategy for loading additional nodes/content onto a page without the use of traditional pagination. Infinite loading instead loads the next batch of content when a user scrolls to the bottom of a web page.","content":"<h2 id=\"what-is-infinite-loading-why-should-i-use-it\"><a href=\"#what-is-infinite-loading-why-should-i-use-it\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>What is infinite loading? Why should I use it?</h2>\n<p>Paginating data in Gridsome is easy using the built-in <a href=\"/docs/pagination/\">@paginate directive</a> and even includes a custom <a href=\"/docs/pagination/#pager-component\">pager component</a>.</p>\n<p>Infinite loading provides the same performance as traditional pagination without requiring any extra navigational UI to be included in a page.</p>\n<p>You can check out a full working example here: <a href=\"https://gridsome-infinite-loading.netlify.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://gridsome-infinite-loading.netlify.com</a></p>\n<h2 id=\"install-the-required-dependencies\"><a href=\"#install-the-required-dependencies\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install the required dependencies</h2>\n<p>Many packages implement the infinite loading technique but one that works particularly well with Gridsome is <a href=\"https://github.com//PeachScript/vue-infinite-loading\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vue-infinite-loading</a>. To add it to your Gridsome project, <code>cd</code> into your project's root and run the following:</p>\n<p><code>yarn add vue-infinite-loading</code></p>\n<h2 id=\"setup\"><a href=\"#setup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Setup</h2>\n<p>To use <code>vue-infinite-loading</code> you'll need to add it to your <code>main.js</code> file first:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">InfiniteLoading</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'vue-infinite-loading'</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token maybe-class-name\">Vue</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> router<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">,</span> isClient <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">Vue</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">use</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">InfiniteLoading</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"blog-example\"><a href=\"#blog-example\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Blog Example</h2>\n<p>To demonstrate how to use <code>vue-infinite-loading</code> let's assume a pretty typical BlogPost type.</p>\n<h3 id=\"page-query\"><a href=\"#page-query\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code>&#x3C;page-query></code></h3>\n<p>Your paginated <code>&#x3C;page-query></code> would look something like this:</p>\n<pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">posts</span><span class=\"token punctuation\">:</span> allBlogPost<span class=\"token punctuation\">(</span><span class=\"token attr-name\">perPage</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">page</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span> <span class=\"token directive function\">@paginate</span> <span class=\"token punctuation\">{</span>\n    pageInfo <span class=\"token punctuation\">{</span>\n      totalPages\n      currentPage\n    <span class=\"token punctuation\">}</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        title\n        path\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>This is a pretty typical way to do traditional pagination, but we're not going to include a pager component in the UI.</p>\n<h3 id=\"script\"><a href=\"#script\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code>&#x3C;script></code></h3>\n<p>Next, we'll need to add a few things to our <code>&#x3C;script></code> tag:</p>\n<ol>\n<li>A couple of variables in our <code>data()</code> method to keep track of our <code>loadedPosts</code> as well as the <code>currentPage</code>.</li>\n<li>Some code to the created method to add the initial \"page\" of data to our <code>loadedPosts</code> array.</li>\n<li>A handler method to pass to our <code>vue-infinite-loading</code> component so it knows how to load the next batch of data.</li>\n</ol>\n<p>Here's what that would look like:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// component for displaying our blog post previews</span>\n<span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">PostCard</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'~/components/PostCard.vue'</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token maybe-class-name\">PostCard</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      loadedPosts<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      currentPage<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">loadedPosts</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span><span class=\"token spread operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">$page</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">posts</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">edges</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">infiniteHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">$state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">currentPage</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">$page</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">posts</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">pageInfo</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">totalPages</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        $state<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">complete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$fetch</span><span class=\"token punctuation\">(</span>\n          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/blog/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">currentPage</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token property-access\">posts</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">edges</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">currentPage</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token property-access\">posts</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">pageInfo</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">currentPage</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">loadedPosts</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span><span class=\"token spread operator\">...</span>data<span class=\"token punctuation\">.</span><span class=\"token property-access\">posts</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">edges</span><span class=\"token punctuation\">)</span>\n          $state<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">loaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          $state<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">complete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Note that you will have to update the path used in the <code>this.$fetch()</code> line to match the path of the page we're building.</p>\n<h3 id=\"template\"><a href=\"#template\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code>&#x3C;template></code></h3>\n<p>Now for the template. One important thing to remember here is that we're going to be iterating over our <code>loadedPosts</code> array rather than the page query object directly.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Layout</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- List blog posts --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>posts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transition-group</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fade<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostCard</span>\n          <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{ node } of loadedPosts<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>node.id<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">:post</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>node<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transition-group</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ClientOnly</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>infinite-loading</span> <span class=\"token attr-name\">@infinite</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>infiniteHandler<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">spinner</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>spiral<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>no-more<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            You've scrolled through all the posts ;)\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>no-results<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            Sorry, no posts yet :(\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>infinite-loading</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ClientOnly</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Layout</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>We've wrapped our <code>&#x3C;infinite-loading></code> component in Gridsome's <code>&#x3C;ClientOnly></code> tag to ensure this works correctly in the production build as well as local development.</p>\n<p>The slots included in the <code>&#x3C;infinite-loading></code> component, as well as the <code>spinner</code> prop, are optional. You can read more about those in the <a href=\"https://peachscript.github.io/vue-infinite-loading/api/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">API docs</a> for <code>vue-infinite-loading</code>.</p>\n<h2 id=\"transitions\"><a href=\"#transitions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Transitions</h2>\n<p>As you can see we've wrapped our blog post component in a <code>&#x3C;transition-group></code> with the name <code>fade</code>. This is so that we can style the transition animation on posts fetched by <code>vue-infinite-loading</code>. To implement a simple fade-in animation add the following styles to your CSS somewhere:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.fade-enter-active</span><span class=\"token punctuation\">,</span>\n<span class=\"token class\">.fade-leave-active</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> ease opacity <span class=\"token number\">0.3</span><span class=\"token unit\">s</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\"><span class=\"token class\">.fade-enter</span><span class=\"token punctuation\">,</span>\n<span class=\"token class\">.fade-leave-to</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h2>\n<p>As you can see, implementing the infinite loading technique in Gridsome is trivial thanks to the <code>vue-infinite-loading</code> plugin and Gridsome's built-in <a href=\"/docs/pagination/\">pagination system</a> and <a href=\"/docs/client-side-data/#fetch-from-internal-pages\">fetch</a> method.</p>\n<p>With that...</p>\n<p><code>You've scrolled to the end ;)</code></p>\n"}}]},"starters":{"totalCount":0,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[]}}},"context":{}}